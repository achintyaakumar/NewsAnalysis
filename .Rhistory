library(newsanchor)
library(newsanchor)
library(abind)
library(newsanchor)
help(newsanchor)
??newsachor
install.packages("newsanchor")
install.packages("newsanchor")
install.packages("newsanchor")
install.packages("newsanchor")
library(newsanchor)
# save the api_key in the .Renviron file
set_api_key(api_key = "2ab94d79bd574e63a0c6b6223446b370",
path = "~/.Renviron")
# save the api_key in the .Renviron file
set_api_key(api_key = 2ab94d79bd574e63a0c6b6223446b370,
# save the api_key in the .Renviron file
set_api_key(api_key = "2ab94d79bd574e63a0c6b6223446b370",
path = "~/.Renviron")
# save the api_key in the .Renviron file
set_api_key(api_key = "2ab94d79bd574e63a0c6b6223446b370",
path = "~/.Renviron")
# save the api_key in the .Renviron file
set_api_key(api_key = "api_key",
path = "~/.Renviron")
library(newsanchor)
sys.setenv(NOAA_KEY = "2ab94d79bd574e63a0c6b6223446b370")
library(newsanchor)
sys.setenv(api_key = "2ab94d79bd574e63a0c6b6223446b370")
??Sys.setenv
??get_headlines
# get headlines published by the Washington Post
results <- get_headlines(sources = "the-washington-post",
api_key = Sys.getenv("NEWS_API_KEY"))
# get headlines published by the Washington Post
results <- get_headlines(sources = "the-washington-post",
api_key = Sys.getenv("NEWS_API_KEY"))
# get headlines published by the Washington Post
results <- get_headlines(sources = "the-washington-post",
api_key = Sys.getenv("NEWS_API_KEY"))
library(newsanchor)
Sys.setenv("NEWS_API_KEY"=2ab94d79bd574e63a0c6b6223446b370)
library(newsanchor)
Sys.setenv(NEWS_API_KEY="2ab94d79bd574e63a0c6b6223446b370")
# get headlines published by the Washington Post
results <- get_headlines(sources = "the-washington-post",
api_key = Sys.getenv("NEWS_API_KEY"))
View(results)
View(results)
view(results_df)
View(results[["results_df"]])
# get headlines published by the Washington Post
results_wp <- get_headlines(sources = "the-washington-post",
api_key = Sys.getenv("NEWS_API_KEY"))
# get headlines for today
results_us_14 <- get_headlines_all(country = "us", api_key = Sys.getenv("NEWS_API_KEY"))
library(newsanchor)
# get headlines for today
results_us_14 <- get_headlines_all(country = "us", api_key = Sys.getenv("NEWS_API_KEY"))
Sys.setenv(NEWS_API_KEY="2ab94d79bd574e63a0c6b6223446b370")
# get headlines for today
results_us_14 <- get_headlines_all(country = "us", api_key = Sys.getenv("NEWS_API_KEY"))
results_in_14 <- get_headlines_all(country = "in", api_key = Sys.getenv("NEWS_API_KEY"))
library(newsanchor)
Sys.setenv(NEWS_API_KEY="2ab94d79bd574e63a0c6b6223446b370")
# get headlines for today
results_us_16 <- get_headlines_all(country = "us", api_key = Sys.getenv("NEWS_API_KEY"))
results_in_16 <- get_headlines_all(country = "in", api_key = Sys.getenv("NEWS_API_KEY"))
Sys.setenv(NEWS_API_KEY="2ab94d79bd574e63a0c6b6223446b370")
library(newsanchor)
# get headlines for today
results_us_17 <- get_headlines_all(country = "us", api_key = Sys.getenv("NEWS_API_KEY"))
results_in_17 <- get_headlines_all(country = "in", api_key = Sys.getenv("NEWS_API_KEY"))
library(newsanchor)
Sys.setenv(NEWS_API_KEY="2ab94d79bd574e63a0c6b6223446b370")
# get headlines for today
results_us_18 <- get_headlines_all(country = "us", api_key = Sys.getenv("NEWS_API_KEY"))
results_in_18 <- get_headlines_all(country = "in", api_key = Sys.getenv("NEWS_API_KEY"))
# get headlines for today
results_us_18 <- get_headlines_all(country = "us", api_key = Sys.getenv("NEWS_API_KEY"))
Sys.setenv(NEWS_API_KEY="2ab94d79bd574e63a0c6b6223446b370")
# get headlines for today
results_us_20 <- get_headlines_all(country = "us", api_key = Sys.getenv("NEWS_API_KEY"))
library(newsanchor)
# get headlines for today
results_us_20 <- get_headlines_all(country = "us", api_key = Sys.getenv("NEWS_API_KEY"))
results_in_20 <- get_headlines_all(country = "in", api_key = Sys.getenv("NEWS_API_KEY"))
View(results_in_18)
View(results_in_18[["metadata"]])
View(results_in_18[["results_df"]])
news %>% group_by(results_in_14$results_df$name) %>% count() %>% ggplot()
results_in_14 %>% group_by(results_in_14$results_df$name) %>% count() %>% ggplot()
library(dplyr) #Data manipulation (also included in the tidyverse package)
library(tidytext) #Text mining
library(tidyr) #Spread, separate, unite, text mining (also included in the tidyverse package)
library(widyr) #Use for pairwise correlation
library(textdata)
results_in_14 %>% group_by(results_in_14$results_df$name) %>% count() %>% ggplot()
results_in_14 %>% group_by(results_df$name) %>% count() %>% ggplot()
results_group %>% group_by(results_in_14$results_df$name) %>% count() %>% ggplot()
results_group <- results_in_14
results_group %>% group_by(results_in_14$results_df$name) %>% count() %>% ggplot()
results_group <- results_in_14
results_group %>% group_by(results_in_14$results_df$name) %>% count()
results_group <- results_in_14
results_group %>% group_by(results_in_14$results_df$name) %>% count()
## Using RAKE
stats <- keywords_rake(x = results_in_14$results_df$description, term = "lemma", group = "doc_id",
relevant = x$upos %in% c("NOUN", "ADJ"))
## Using RAKE
library(udpipe)
package.install("udpipe")
install.packages("udpipe")
## Using RAKE
library(udpipe)
stats <- keywords_rake(x = results_in_14$results_df$description, term = "lemma", group = "doc_id",
relevant = x$upos %in% c("NOUN", "ADJ"))
## Using RAKE
library(udpipe)
s <- udpipe_annotate(udmodel_english, results_in_14$results_df$description)
## Using RAKE
library(udpipe)
#model <- udpipe_download_model(language = "english")
udmodel_english <- udpipe_load_model(file = 'english-ud-2.0-170801.udpipe')
## Using RAKE
library(udpipe)
model <- udpipe_download_model(language = "english")
udmodel_english <- udpipe_load_model(file = 'english-ud-2.0-170801.udpipe')
## Using RAKE
library(udpipe)
model <- udpipe_download_model(language = "english")
udmodel_english <- udpipe_load_model(model$file_model)
s <- udpipe_annotate(udmodel_english, results_in_14$results_df$description)
x <- data.frame(s)
stats <- keywords_rake(x = x, term = "lemma", group = "doc_id",
relevant = x$upos %in% c("NOUN", "ADJ"))
stats$key <- factor(stats$keyword, levels = rev(stats$keyword))
barchart(key ~ rake, data = head(subset(stats, freq > 3), 20), col = "red",
main = "Keywords identified by RAKE",
xlab = "Rake")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
## Using RAKE
library(udpipe)
model <- udpipe_download_model(language = "english")
udmodel_english <- udpipe_load_model(model$file_model)
s <- udpipe_annotate(udmodel_english, results_in_14$results_df$description)
x <- data.frame(s)
stats <- keywords_rake(x = x, term = "lemma", group = "doc_id",
relevant = x$upos %in% c("NOUN", "ADJ"))
stats$key <- factor(stats$keyword, levels = rev(stats$keyword))
barchart(key ~ rake, data = head(subset(stats, freq > 3), 20), col = "red",
main = "Keywords identified by RAKE",
xlab = "Rake")
library(dplyr) #Data manipulation (also included in the tidyverse package)
library(tidytext) #Text mining
library(tidyr) #Spread, separate, unite, text mining (also included in the tidyverse package)
library(widyr) #Use for pairwise correlation
library(textdata)
library(ggplot2)
## Using RAKE
library(udpipe)
#model <- udpipe_download_model(language = "english")
udmodel_english <- udpipe_load_model(model$file_model)
s <- udpipe_annotate(udmodel_english, results_in_14$results_df$description)
x <- data.frame(s)
stats <- keywords_rake(x = x, term = "lemma", group = "doc_id",
relevant = x$upos %in% c("NOUN", "ADJ"))
stats$key <- factor(stats$keyword, levels = rev(stats$keyword))
barchart(key ~ rake, data = head(subset(stats, freq > 3), 20), col = "red",
main = "Keywords identified by RAKE",
xlab = "Rake")
library(dplyr) #Data manipulation (also included in the tidyverse package)
library(tidytext) #Text mining
library(tidyr) #Spread, separate, unite, text mining (also included in the tidyverse package)
library(widyr) #Use for pairwise correlation
library(textdata)
library(ggplot2)
library(hplot)
install.packages(hplot)
install.packages("hplot")
library(dplyr) #Data manipulation (also included in the tidyverse package)
library(tidytext) #Text mining
library(tidyr) #Spread, separate, unite, text mining (also included in the tidyverse package)
library(widyr) #Use for pairwise correlation
library(textdata)
library(ggplot2)
library(lattice)
library(dplyr) #Data manipulation (also included in the tidyverse package)
library(tidytext) #Text mining
library(tidyr) #Spread, separate, unite, text mining (also included in the tidyverse package)
library(widyr) #Use for pairwise correlation
library(textdata)
library(ggplot2)
library(lattice)
library(dplyr) #Data manipulation (also included in the tidyverse package)
library(tidytext) #Text mining
library(tidyr) #Spread, separate, unite, text mining (also included in the tidyverse package)
library(widyr) #Use for pairwise correlation
library(textdata)
library(ggplot2)
library(lattice)
library(dplyr) #Data manipulation (also included in the tidyverse package)
library(tidytext) #Text mining
library(tidyr) #Spread, separate, unite, text mining (also included in the tidyverse package)
library(widyr) #Use for pairwise correlation
library(textdata)
library(ggplot2)
## Using RAKE
library(udpipe)
library(lattice)
install.packages("lattice", .Library)
install.packages("lattice", .Library)
install.packages("lattice", .Library)
install.packages("lattice", .Library)
install.packages("lattice", .Library)
## Using RAKE
library(udpipe)
library(lattice)
#model <- udpipe_download_model(language = "english")
udmodel_english <- udpipe_load_model(model$file_model)
s <- udpipe_annotate(udmodel_english, results_in_14$results_df$description)
x <- data.frame(s)
stats <- keywords_rake(x = x, term = "lemma", group = "doc_id",
relevant = x$upos %in% c("NOUN", "ADJ"))
stats$key <- factor(stats$keyword, levels = rev(stats$keyword))
barchart(key ~ rake, data = head(subset(stats, freq > 3), 20), col = "red",
main = "Keywords identified by RAKE",
xlab = "Rake")
